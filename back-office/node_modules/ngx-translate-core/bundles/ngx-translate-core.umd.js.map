{"version":3,"file":"ngx-translate-core.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@ngx-translate/core/lib/translate.loader.ts","ng://@ngx-translate/core/lib/missing-translation-handler.ts","ng://@ngx-translate/core/lib/translate.compiler.ts","ng://@ngx-translate/core/lib/util.ts","ng://@ngx-translate/core/lib/translate.parser.ts","ng://@ngx-translate/core/lib/translate.store.ts","ng://@ngx-translate/core/lib/translate.service.ts","ng://@ngx-translate/core/lib/translate.directive.ts","ng://@ngx-translate/core/lib/translate.pipe.ts","ng://@ngx-translate/core/public_api.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Observable, of} from \"rxjs\";\r\n\r\nexport abstract class TranslateLoader {\r\n  abstract getTranslation(lang: string): Observable<any>;\r\n}\r\n\r\n/**\r\n * This loader is just a placeholder that does nothing, in case you don't need a loader at all\r\n */\r\n@Injectable()\r\nexport class TranslateFakeLoader extends TranslateLoader {\r\n  getTranslation(lang: string): Observable<any> {\r\n    return of({});\r\n  }\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {TranslateService} from \"./translate.service\";\r\n\r\nexport interface MissingTranslationHandlerParams {\r\n  /**\r\n   * the key that's missing in translation files\r\n   */\r\n  key: string;\r\n\r\n  /**\r\n   * an instance of the service that was unable to translate the key.\r\n   */\r\n  translateService: TranslateService;\r\n\r\n  /**\r\n   * interpolation params that were passed along for translating the given key.\r\n   */\r\n  interpolateParams?: Object;\r\n}\r\n\r\nexport abstract class MissingTranslationHandler {\r\n  /**\r\n   * A function that handles missing translations.\r\n   *\r\n   * @param params context for resolving a missing translation\r\n   * @returns a value or an observable\r\n   * If it returns a value, then this value is used.\r\n   * If it return an observable, the value returned by this observable will be used (except if the method was \"instant\").\r\n   * If it doesn't return then the key will be used as a value\r\n   */\r\n  abstract handle(params: MissingTranslationHandlerParams): any;\r\n}\r\n\r\n/**\r\n * This handler is just a placeholder that does nothing, in case you don't need a missing translation handler at all\r\n */\r\n@Injectable()\r\nexport class FakeMissingTranslationHandler implements MissingTranslationHandler {\r\n  handle(params: MissingTranslationHandlerParams): string {\r\n    return params.key;\r\n  }\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\n\r\nexport abstract class TranslateCompiler {\r\n  abstract compile(value: string, lang: string): string | Function;\r\n\r\n  abstract compileTranslations(translations: any, lang: string): any;\r\n}\r\n\r\n/**\r\n * This compiler is just a placeholder that does nothing, in case you don't need a compiler at all\r\n */\r\n@Injectable()\r\nexport class TranslateFakeCompiler extends TranslateCompiler {\r\n  compile(value: string, lang: string): string | Function {\r\n    return value;\r\n  }\r\n\r\n  compileTranslations(translations: any, lang: string): any {\r\n    return translations;\r\n  }\r\n}\r\n","/* tslint:disable */\r\n/**\r\n * Determines if two objects or two values are equivalent.\r\n *\r\n * Two objects or values are considered equivalent if at least one of the following is true:\r\n *\r\n * * Both objects or values pass `===` comparison.\r\n * * Both objects or values are of the same type and all of their properties are equal by\r\n *   comparing them with `equals`.\r\n *\r\n * @param o1 Object or value to compare.\r\n * @param o2 Object or value to compare.\r\n * @returns true if arguments are equal.\r\n */\r\nexport function equals(o1: any, o2: any): boolean {\r\n  if (o1 === o2) return true;\r\n  if (o1 === null || o2 === null) return false;\r\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\r\n  let t1 = typeof o1, t2 = typeof o2, length: number, key: any, keySet: any;\r\n  if (t1 == t2 && t1 == 'object') {\r\n    if (Array.isArray(o1)) {\r\n      if (!Array.isArray(o2)) return false;\r\n      if ((length = o1.length) == o2.length) {\r\n        for (key = 0; key < length; key++) {\r\n          if (!equals(o1[key], o2[key])) return false;\r\n        }\r\n        return true;\r\n      }\r\n    } else {\r\n      if (Array.isArray(o2)) {\r\n        return false;\r\n      }\r\n      keySet = Object.create(null);\r\n      for (key in o1) {\r\n        if (!equals(o1[key], o2[key])) {\r\n          return false;\r\n        }\r\n        keySet[key] = true;\r\n      }\r\n      for (key in o2) {\r\n        if (!(key in keySet) && typeof o2[key] !== 'undefined') {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n/* tslint:enable */\r\n\r\nexport function isDefined(value: any): boolean {\r\n  return typeof value !== 'undefined' && value !== null;\r\n}\r\n\r\nexport function isObject(item: any): boolean {\r\n  return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\nexport function mergeDeep(target: any, source: any): any {\r\n  let output = Object.assign({}, target);\r\n  if (isObject(target) && isObject(source)) {\r\n    Object.keys(source).forEach((key: any) => {\r\n      if (isObject(source[key])) {\r\n        if (!(key in target)) {\r\n          Object.assign(output, {[key]: source[key]});\r\n        } else {\r\n          output[key] = mergeDeep(target[key], source[key]);\r\n        }\r\n      } else {\r\n        Object.assign(output, {[key]: source[key]});\r\n      }\r\n    });\r\n  }\r\n  return output;\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {isDefined} from \"./util\";\r\n\r\nexport abstract class TranslateParser {\r\n  /**\r\n   * Interpolates a string to replace parameters\r\n   * \"This is a {{ key }}\" ==> \"This is a value\", with params = { key: \"value\" }\r\n   * @param expr\r\n   * @param params\r\n   */\r\n  abstract interpolate(expr: string | Function, params?: any): string;\r\n\r\n  /**\r\n   * Gets a value from an object by composed key\r\n   * parser.getValue({ key1: { keyA: 'valueI' }}, 'key1.keyA') ==> 'valueI'\r\n   * @param target\r\n   * @param key\r\n   */\r\n  abstract getValue(target: any, key: string): any\r\n}\r\n\r\n@Injectable()\r\nexport class TranslateDefaultParser extends TranslateParser {\r\n  templateMatcher: RegExp = /{{\\s?([^{}\\s]*)\\s?}}/g;\r\n\r\n  public interpolate(expr: string | Function, params?: any): string {\r\n    let result: string;\r\n\r\n    if (typeof expr === 'string') {\r\n      result = this.interpolateString(expr, params);\r\n    } else if (typeof expr === 'function') {\r\n      result = this.interpolateFunction(expr, params);\r\n    } else {\r\n      // this should not happen, but an unrelated TranslateService test depends on it\r\n      result = expr as string;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getValue(target: any, key: string): any {\r\n    let keys = key.split('.');\r\n    key = '';\r\n    do {\r\n      key += keys.shift();\r\n      if (isDefined(target) && isDefined(target[key]) && (typeof target[key] === 'object' || !keys.length)) {\r\n        target = target[key];\r\n        key = '';\r\n      } else if (!keys.length) {\r\n        target = undefined;\r\n      } else {\r\n        key += '.';\r\n      }\r\n    } while (keys.length);\r\n\r\n    return target;\r\n  }\r\n\r\n  private interpolateFunction(fn: Function, params?: any) {\r\n    return fn(params);\r\n  }\r\n\r\n  private interpolateString(expr: string, params?: any) {\r\n    if (!params) {\r\n      return expr;\r\n    }\r\n\r\n    return expr.replace(this.templateMatcher, (substring: string, b: string) => {\r\n      let r = this.getValue(params, b);\r\n      return isDefined(r) ? r : substring;\r\n    });\r\n  }\r\n}\r\n","import {EventEmitter} from \"@angular/core\";\r\nimport {DefaultLangChangeEvent, LangChangeEvent, TranslationChangeEvent} from \"./translate.service\";\r\n\r\nexport class TranslateStore {\r\n  /**\r\n   * The default lang to fallback when translations are missing on the current lang\r\n   */\r\n  public defaultLang: string;\r\n\r\n  /**\r\n   * The lang currently used\r\n   */\r\n  public currentLang: string = this.defaultLang;\r\n\r\n  /**\r\n   * a list of translations per lang\r\n   */\r\n  public translations: any = {};\r\n\r\n  /**\r\n   * an array of langs\r\n   */\r\n  public langs: Array<string> = [];\r\n\r\n  /**\r\n   * An EventEmitter to listen to translation change events\r\n   * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\r\n     *     // do something\r\n     * });\r\n   */\r\n  public onTranslationChange: EventEmitter<TranslationChangeEvent> = new EventEmitter<TranslationChangeEvent>();\r\n\r\n  /**\r\n   * An EventEmitter to listen to lang change events\r\n   * onLangChange.subscribe((params: LangChangeEvent) => {\r\n     *     // do something\r\n     * });\r\n   */\r\n  public onLangChange: EventEmitter<LangChangeEvent> = new EventEmitter<LangChangeEvent>();\r\n\r\n  /**\r\n   * An EventEmitter to listen to default lang change events\r\n   * onDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\r\n     *     // do something\r\n     * });\r\n   */\r\n  public onDefaultLangChange: EventEmitter<DefaultLangChangeEvent> = new EventEmitter<DefaultLangChangeEvent>();\r\n}\r\n","import {EventEmitter, Inject, Injectable, InjectionToken} from \"@angular/core\";\r\nimport {concat, merge, Observable, Observer, of} from \"rxjs\";\r\nimport {map, share, switchMap, take, toArray} from \"rxjs/operators\";\r\nimport {MissingTranslationHandler, MissingTranslationHandlerParams} from \"./missing-translation-handler\";\r\nimport {TranslateCompiler} from \"./translate.compiler\";\r\nimport {TranslateLoader} from \"./translate.loader\";\r\nimport {TranslateParser} from \"./translate.parser\";\r\n\r\nimport {TranslateStore} from \"./translate.store\";\r\nimport {isDefined, mergeDeep} from \"./util\";\r\n\r\nexport const USE_STORE = new InjectionToken<string>('USE_STORE');\r\nexport const USE_DEFAULT_LANG = new InjectionToken<string>('USE_DEFAULT_LANG');\r\n\r\nexport interface TranslationChangeEvent {\r\n  translations: any;\r\n  lang: string;\r\n}\r\n\r\nexport interface LangChangeEvent {\r\n  lang: string;\r\n  translations: any;\r\n}\r\n\r\nexport interface DefaultLangChangeEvent {\r\n  lang: string;\r\n  translations: any;\r\n}\r\n\r\ndeclare interface Window {\r\n  navigator: any;\r\n}\r\n\r\ndeclare const window: Window;\r\n\r\n@Injectable()\r\nexport class TranslateService {\r\n  private loadingTranslations: Observable<any>;\r\n  private pending: boolean = false;\r\n  private _onTranslationChange: EventEmitter<TranslationChangeEvent> = new EventEmitter<TranslationChangeEvent>();\r\n  private _onLangChange: EventEmitter<LangChangeEvent> = new EventEmitter<LangChangeEvent>();\r\n  private _onDefaultLangChange: EventEmitter<DefaultLangChangeEvent> = new EventEmitter<DefaultLangChangeEvent>();\r\n  private _defaultLang: string;\r\n  private _currentLang: string;\r\n  private _langs: Array<string> = [];\r\n  private _translations: any = {};\r\n  private _translationRequests: any = {};\r\n\r\n  /**\r\n   * An EventEmitter to listen to translation change events\r\n   * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\r\n     *     // do something\r\n     * });\r\n   */\r\n  get onTranslationChange(): EventEmitter<TranslationChangeEvent> {\r\n    return this.isolate ? this._onTranslationChange : this.store.onTranslationChange;\r\n  }\r\n\r\n  /**\r\n   * An EventEmitter to listen to lang change events\r\n   * onLangChange.subscribe((params: LangChangeEvent) => {\r\n     *     // do something\r\n     * });\r\n   */\r\n  get onLangChange(): EventEmitter<LangChangeEvent> {\r\n    return this.isolate ? this._onLangChange : this.store.onLangChange;\r\n  }\r\n\r\n  /**\r\n   * An EventEmitter to listen to default lang change events\r\n   * onDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\r\n     *     // do something\r\n     * });\r\n   */\r\n  get onDefaultLangChange() {\r\n    return this.isolate ? this._onDefaultLangChange : this.store.onDefaultLangChange;\r\n  }\r\n\r\n  /**\r\n   * The default lang to fallback when translations are missing on the current lang\r\n   */\r\n  get defaultLang(): string {\r\n    return this.isolate ? this._defaultLang : this.store.defaultLang;\r\n  }\r\n\r\n  set defaultLang(defaultLang: string) {\r\n    if (this.isolate) {\r\n      this._defaultLang = defaultLang;\r\n    } else {\r\n      this.store.defaultLang = defaultLang;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The lang currently used\r\n   */\r\n  get currentLang(): string {\r\n    return this.isolate ? this._currentLang : this.store.currentLang;\r\n  }\r\n\r\n  set currentLang(currentLang: string) {\r\n    if (this.isolate) {\r\n      this._currentLang = currentLang;\r\n    } else {\r\n      this.store.currentLang = currentLang;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * an array of langs\r\n   */\r\n  get langs(): string[] {\r\n    return this.isolate ? this._langs : this.store.langs;\r\n  }\r\n\r\n  set langs(langs: string[]) {\r\n    if (this.isolate) {\r\n      this._langs = langs;\r\n    } else {\r\n      this.store.langs = langs;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * a list of translations per lang\r\n   */\r\n  get translations(): any {\r\n    return this.isolate ? this._translations : this.store.translations;\r\n  }\r\n\r\n  set translations(translations: any) {\r\n    if (this.isolate) {\r\n      this._translations = translations;\r\n    } else {\r\n      this.store.translations = translations;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param store an instance of the store (that is supposed to be unique)\r\n   * @param currentLoader An instance of the loader currently used\r\n   * @param compiler An instance of the compiler currently used\r\n   * @param parser An instance of the parser currently used\r\n   * @param missingTranslationHandler A handler for missing translations.\r\n   * @param isolate whether this service should use the store or not\r\n   * @param useDefaultLang whether we should use default language translation when current language translation is missing.\r\n   */\r\n  constructor(public store: TranslateStore,\r\n              public currentLoader: TranslateLoader,\r\n              public compiler: TranslateCompiler,\r\n              public parser: TranslateParser,\r\n              public missingTranslationHandler: MissingTranslationHandler,\r\n              @Inject(USE_DEFAULT_LANG) private useDefaultLang: boolean = true,\r\n              @Inject(USE_STORE) private isolate: boolean = false) {\r\n  }\r\n\r\n  /**\r\n   * Sets the default language to use as a fallback\r\n   */\r\n  public setDefaultLang(lang: string): void {\r\n    if (lang === this.defaultLang) {\r\n      return;\r\n    }\r\n\r\n    let pending: Observable<any> = this.retrieveTranslations(lang);\r\n\r\n    if (typeof pending !== \"undefined\") {\r\n      // on init set the defaultLang immediately\r\n      if (!this.defaultLang) {\r\n        this.defaultLang = lang;\r\n      }\r\n\r\n      pending.pipe(take(1))\r\n        .subscribe((res: any) => {\r\n          this.changeDefaultLang(lang);\r\n        });\r\n    } else { // we already have this language\r\n      this.changeDefaultLang(lang);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the default language used\r\n   */\r\n  public getDefaultLang(): string {\r\n    return this.defaultLang;\r\n  }\r\n\r\n  /**\r\n   * Changes the lang currently used\r\n   */\r\n  public use(lang: string): Observable<any> {\r\n    // don't change the language if the language given is already selected\r\n    if (lang === this.currentLang) {\r\n      return of(this.translations[lang]);\r\n    }\r\n\r\n    let pending: Observable<any> = this.retrieveTranslations(lang);\r\n\r\n    if (typeof pending !== \"undefined\") {\r\n      // on init set the currentLang immediately\r\n      if (!this.currentLang) {\r\n        this.currentLang = lang;\r\n      }\r\n\r\n      pending.pipe(take(1))\r\n        .subscribe((res: any) => {\r\n          this.changeLang(lang);\r\n        });\r\n\r\n      return pending;\r\n    } else { // we have this language, return an Observable\r\n      this.changeLang(lang);\r\n\r\n      return of(this.translations[lang]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieves the given translations\r\n   */\r\n  private retrieveTranslations(lang: string): Observable<any> {\r\n    let pending: Observable<any>;\r\n\r\n    // if this language is unavailable, ask for it\r\n    if (typeof this.translations[lang] === \"undefined\") {\r\n      this._translationRequests[lang] = this._translationRequests[lang] || this.getTranslation(lang);\r\n      pending = this._translationRequests[lang];\r\n    }\r\n\r\n    return pending;\r\n  }\r\n\r\n  /**\r\n   * Gets an object of translations for a given language with the current loader\r\n   * and passes it through the compiler\r\n   */\r\n  public getTranslation(lang: string): Observable<any> {\r\n    this.pending = true;\r\n    const loadingTranslations = this.currentLoader.getTranslation(lang).pipe(share());\r\n    this.loadingTranslations = loadingTranslations.pipe(\r\n      take(1),\r\n      map((res: Object) => this.compiler.compileTranslations(res, lang)),\r\n      share()\r\n    );\r\n\r\n    this.loadingTranslations\r\n      .subscribe((res: Object) => {\r\n        this.translations[lang] = res;\r\n        this.updateLangs();\r\n        this.pending = false;\r\n      }, (err: any) => {\r\n        this.pending = false;\r\n      });\r\n\r\n    return loadingTranslations;\r\n  }\r\n\r\n  /**\r\n   * Manually sets an object of translations for a given language\r\n   * after passing it through the compiler\r\n   */\r\n  public setTranslation(lang: string, translations: Object, shouldMerge: boolean = false): void {\r\n    translations = this.compiler.compileTranslations(translations, lang);\r\n    if (shouldMerge && this.translations[lang]) {\r\n      this.translations[lang] = mergeDeep(this.translations[lang], translations);\r\n    } else {\r\n      this.translations[lang] = translations;\r\n    }\r\n    this.updateLangs();\r\n    this.onTranslationChange.emit({lang: lang, translations: this.translations[lang]});\r\n  }\r\n\r\n  /**\r\n   * Returns an array of currently available langs\r\n   */\r\n  public getLangs(): Array<string> {\r\n    return this.langs;\r\n  }\r\n\r\n  /**\r\n   * Add available langs\r\n   */\r\n  public addLangs(langs: Array<string>): void {\r\n    langs.forEach((lang: string) => {\r\n      if (this.langs.indexOf(lang) === -1) {\r\n        this.langs.push(lang);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update the list of available langs\r\n   */\r\n  private updateLangs(): void {\r\n    this.addLangs(Object.keys(this.translations));\r\n  }\r\n\r\n  /**\r\n   * Returns the parsed result of the translations\r\n   */\r\n  public getParsedResult(translations: any, key: any, interpolateParams?: Object): any {\r\n    let res: string | Observable<string>;\r\n\r\n    if (key instanceof Array) {\r\n      let result: any = {},\r\n        observables: boolean = false;\r\n      for (let k of key) {\r\n        result[k] = this.getParsedResult(translations, k, interpolateParams);\r\n        if (typeof result[k].subscribe === \"function\") {\r\n          observables = true;\r\n        }\r\n      }\r\n      if (observables) {\r\n        let mergedObs: Observable<string>;\r\n        for (let k of key) {\r\n          let obs = typeof result[k].subscribe === \"function\" ? result[k] : of(result[k] as string);\r\n          if (typeof mergedObs === \"undefined\") {\r\n            mergedObs = obs;\r\n          } else {\r\n            mergedObs = merge(mergedObs, obs);\r\n          }\r\n        }\r\n        return mergedObs.pipe(\r\n          toArray(),\r\n          map((arr: Array<string>) => {\r\n            let obj: any = {};\r\n            arr.forEach((value: string, index: number) => {\r\n              obj[key[index]] = value;\r\n            });\r\n            return obj;\r\n          })\r\n        );\r\n      }\r\n      return result;\r\n    }\r\n\r\n    if (translations) {\r\n      res = this.parser.interpolate(this.parser.getValue(translations, key), interpolateParams);\r\n    }\r\n\r\n    if (typeof res === \"undefined\" && this.defaultLang && this.defaultLang !== this.currentLang && this.useDefaultLang) {\r\n      res = this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang], key), interpolateParams);\r\n    }\r\n\r\n    if (typeof res === \"undefined\") {\r\n      let params: MissingTranslationHandlerParams = {key, translateService: this};\r\n      if (typeof interpolateParams !== 'undefined') {\r\n        params.interpolateParams = interpolateParams;\r\n      }\r\n      res = this.missingTranslationHandler.handle(params);\r\n    }\r\n\r\n    return typeof res !== \"undefined\" ? res : key;\r\n  }\r\n\r\n  /**\r\n   * Gets the translated value of a key (or an array of keys)\r\n   * @returns the translated key, or an object of translated keys\r\n   */\r\n  public get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\r\n    if (!isDefined(key) || !key.length) {\r\n      throw new Error(`Parameter \"key\" required`);\r\n    }\r\n    // check if we are loading a new translation to use\r\n    if (this.pending) {\r\n      return Observable.create((observer: Observer<string>) => {\r\n        let onComplete = (res: string) => {\r\n          observer.next(res);\r\n          observer.complete();\r\n        };\r\n        let onError = (err: any) => {\r\n          observer.error(err);\r\n        };\r\n        this.loadingTranslations.subscribe((res: any) => {\r\n          res = this.getParsedResult(res, key, interpolateParams);\r\n          if (typeof res.subscribe === \"function\") {\r\n            res.subscribe(onComplete, onError);\r\n          } else {\r\n            onComplete(res);\r\n          }\r\n        }, onError);\r\n      });\r\n    } else {\r\n      let res = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\r\n      if (typeof res.subscribe === \"function\") {\r\n        return res;\r\n      } else {\r\n        return of(res);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a stream of translated values of a key (or an array of keys) which updates\r\n   * whenever the language changes.\r\n   * @returns A stream of the translated key, or an object of translated keys\r\n   */\r\n  public stream(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\r\n    if (!isDefined(key) || !key.length) {\r\n      throw new Error(`Parameter \"key\" required`);\r\n    }\r\n\r\n    return concat(\r\n      this.get(key, interpolateParams),\r\n      this.onLangChange.pipe(\r\n        switchMap((event: LangChangeEvent) => {\r\n          const res = this.getParsedResult(event.translations, key, interpolateParams);\r\n          if (typeof res.subscribe === \"function\") {\r\n            return res;\r\n          } else {\r\n            return of(res);\r\n          }\r\n        })\r\n      ));\r\n  }\r\n\r\n  /**\r\n   * Returns a translation instantly from the internal state of loaded translation.\r\n   * All rules regarding the current language, the preferred language of even fallback languages will be used except any promise handling.\r\n   */\r\n  public instant(key: string | Array<string>, interpolateParams?: Object): string | any {\r\n    if (!isDefined(key) || !key.length) {\r\n      throw new Error(`Parameter \"key\" required`);\r\n    }\r\n\r\n    let res = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\r\n    if (typeof res.subscribe !== \"undefined\") {\r\n      if (key instanceof Array) {\r\n        let obj: any = {};\r\n        key.forEach((value: string, index: number) => {\r\n          obj[key[index]] = key[index];\r\n        });\r\n        return obj;\r\n      }\r\n      return key;\r\n    } else {\r\n      return res;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the translated value of a key, after compiling it\r\n   */\r\n  public set(key: string, value: string, lang: string = this.currentLang): void {\r\n    this.translations[lang][key] = this.compiler.compile(value, lang);\r\n    this.updateLangs();\r\n    this.onTranslationChange.emit({lang: lang, translations: this.translations[lang]});\r\n  }\r\n\r\n  /**\r\n   * Changes the current lang\r\n   */\r\n  private changeLang(lang: string): void {\r\n    this.currentLang = lang;\r\n    this.onLangChange.emit({lang: lang, translations: this.translations[lang]});\r\n\r\n    // if there is no default lang, use the one that we just set\r\n    if (!this.defaultLang) {\r\n      this.changeDefaultLang(lang);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Changes the default lang\r\n   */\r\n  private changeDefaultLang(lang: string): void {\r\n    this.defaultLang = lang;\r\n    this.onDefaultLangChange.emit({lang: lang, translations: this.translations[lang]});\r\n  }\r\n\r\n  /**\r\n   * Allows to reload the lang file from the file\r\n   */\r\n  public reloadLang(lang: string): Observable<any> {\r\n    this.resetLang(lang);\r\n    return this.getTranslation(lang);\r\n  }\r\n\r\n  /**\r\n   * Deletes inner translation\r\n   */\r\n  public resetLang(lang: string): void {\r\n    this._translationRequests[lang] = undefined;\r\n    this.translations[lang] = undefined;\r\n  }\r\n\r\n  /**\r\n   * Returns the language code name from the browser, e.g. \"de\"\r\n   */\r\n  public getBrowserLang(): string {\r\n    if (typeof window === 'undefined' || typeof window.navigator === 'undefined') {\r\n      return undefined;\r\n    }\r\n\r\n    let browserLang: any = window.navigator.languages ? window.navigator.languages[0] : null;\r\n    browserLang = browserLang || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\r\n\r\n    if (browserLang.indexOf('-') !== -1) {\r\n      browserLang = browserLang.split('-')[0];\r\n    }\r\n\r\n    if (browserLang.indexOf('_') !== -1) {\r\n      browserLang = browserLang.split('_')[0];\r\n    }\r\n\r\n    return browserLang;\r\n  }\r\n\r\n  /**\r\n   * Returns the culture language code name from the browser, e.g. \"de-DE\"\r\n   */\r\n  public getBrowserCultureLang(): string {\r\n    if (typeof window === 'undefined' || typeof window.navigator === 'undefined') {\r\n      return undefined;\r\n    }\r\n\r\n    let browserCultureLang: any = window.navigator.languages ? window.navigator.languages[0] : null;\r\n    browserCultureLang = browserCultureLang || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\r\n\r\n    return browserCultureLang;\r\n  }\r\n}\r\n","import {AfterViewChecked, ChangeDetectorRef, Directive, ElementRef, Input, OnDestroy} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {DefaultLangChangeEvent, LangChangeEvent, TranslateService, TranslationChangeEvent} from './translate.service';\r\nimport {equals, isDefined} from './util';\r\n\r\n@Directive({\r\n  selector: '[translate],[ngx-translate]'\r\n})\r\nexport class TranslateDirective implements AfterViewChecked, OnDestroy {\r\n  key: string;\r\n  lastParams: any;\r\n  currentParams: any;\r\n  onLangChangeSub: Subscription;\r\n  onDefaultLangChangeSub: Subscription;\r\n  onTranslationChangeSub: Subscription;\r\n\r\n  @Input() set translate(key: string) {\r\n    if (key) {\r\n      this.key = key;\r\n      this.checkNodes();\r\n    }\r\n  }\r\n\r\n  @Input() set translateParams(params: any) {\r\n    if (!equals(this.currentParams, params)) {\r\n      this.currentParams = params;\r\n      this.checkNodes(true);\r\n    }\r\n  }\r\n\r\n  constructor(private translateService: TranslateService, private element: ElementRef, private _ref: ChangeDetectorRef) {\r\n    // subscribe to onTranslationChange event, in case the translations of the current lang change\r\n    if (!this.onTranslationChangeSub) {\r\n      this.onTranslationChangeSub = this.translateService.onTranslationChange.subscribe((event: TranslationChangeEvent) => {\r\n        if (event.lang === this.translateService.currentLang) {\r\n          this.checkNodes(true, event.translations);\r\n        }\r\n      });\r\n    }\r\n\r\n    // subscribe to onLangChange event, in case the language changes\r\n    if (!this.onLangChangeSub) {\r\n      this.onLangChangeSub = this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\r\n        this.checkNodes(true, event.translations);\r\n      });\r\n    }\r\n\r\n    // subscribe to onDefaultLangChange event, in case the default language changes\r\n    if (!this.onDefaultLangChangeSub) {\r\n      this.onDefaultLangChangeSub = this.translateService.onDefaultLangChange.subscribe((event: DefaultLangChangeEvent) => {\r\n        this.checkNodes(true);\r\n      });\r\n    }\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.checkNodes();\r\n  }\r\n\r\n  checkNodes(forceUpdate = false, translations?: any) {\r\n    let nodes: NodeList = this.element.nativeElement.childNodes;\r\n    // if the element is empty\r\n    if (!nodes.length) {\r\n      // we add the key as content\r\n      this.setContent(this.element.nativeElement, this.key);\r\n      nodes = this.element.nativeElement.childNodes;\r\n    }\r\n    for (let i = 0; i < nodes.length; ++i) {\r\n      let node: any = nodes[i];\r\n      if (node.nodeType === 3) { // node type 3 is a text node\r\n        let key: string;\r\n        if (this.key) {\r\n          key = this.key;\r\n          if (forceUpdate) {\r\n            node.lastKey = null;\r\n          }\r\n        } else {\r\n          let content = this.getContent(node);\r\n          let trimmedContent = content.trim();\r\n          if (trimmedContent.length) {\r\n            // we want to use the content as a key, not the translation value\r\n            if (content !== node.currentValue) {\r\n              key = trimmedContent;\r\n              // the content was changed from the user, we'll use it as a reference if needed\r\n              node.originalContent = this.getContent(node);\r\n            } else if (node.originalContent && forceUpdate) { // the content seems ok, but the lang has changed\r\n              node.lastKey = null;\r\n              // the current content is the translation, not the key, use the last real content as key\r\n              key = node.originalContent.trim();\r\n            }\r\n          }\r\n        }\r\n        this.updateValue(key, node, translations);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateValue(key: string, node: any, translations: any) {\r\n    if (key) {\r\n      if (node.lastKey === key && this.lastParams === this.currentParams) {\r\n        return;\r\n      }\r\n\r\n      this.lastParams = this.currentParams;\r\n\r\n      let onTranslation = (res: string) => {\r\n        if (res !== key) {\r\n          node.lastKey = key;\r\n        }\r\n        if (!node.originalContent) {\r\n          node.originalContent = this.getContent(node);\r\n        }\r\n        node.currentValue = isDefined(res) ? res : (node.originalContent || key);\r\n        // we replace in the original content to preserve spaces that we might have trimmed\r\n        this.setContent(node, this.key ? node.currentValue : node.originalContent.replace(key, node.currentValue));\r\n        this._ref.markForCheck();\r\n      };\r\n\r\n      if (isDefined(translations)) {\r\n        let res = this.translateService.getParsedResult(translations, key, this.currentParams);\r\n        if (typeof res.subscribe === \"function\") {\r\n          res.subscribe(onTranslation);\r\n        } else {\r\n          onTranslation(res);\r\n        }\r\n      } else {\r\n        this.translateService.get(key, this.currentParams).subscribe(onTranslation);\r\n      }\r\n    }\r\n  }\r\n\r\n  getContent(node: any): string {\r\n    return isDefined(node.textContent) ? node.textContent : node.data;\r\n  }\r\n\r\n  setContent(node: any, content: string): void {\r\n    if (isDefined(node.textContent)) {\r\n      node.textContent = content;\r\n    } else {\r\n      node.data = content;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.onLangChangeSub) {\r\n      this.onLangChangeSub.unsubscribe();\r\n    }\r\n\r\n    if (this.onDefaultLangChangeSub) {\r\n      this.onDefaultLangChangeSub.unsubscribe();\r\n    }\r\n\r\n    if (this.onTranslationChangeSub) {\r\n      this.onTranslationChangeSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import {ChangeDetectorRef, EventEmitter, Injectable, OnDestroy, Pipe, PipeTransform} from '@angular/core';\r\nimport {DefaultLangChangeEvent, LangChangeEvent, TranslateService, TranslationChangeEvent} from './translate.service';\r\nimport {equals, isDefined} from './util';\r\n\r\n@Pipe({\r\n  name: 'translate',\r\n  pure: false // required to update the value when the promise is resolved\r\n})\r\nexport class TranslatePipe implements PipeTransform, OnDestroy {\r\n  value: string = '';\r\n  lastKey: string;\r\n  lastParams: any[];\r\n  onTranslationChange: EventEmitter<TranslationChangeEvent>;\r\n  onLangChange: EventEmitter<LangChangeEvent>;\r\n  onDefaultLangChange: EventEmitter<DefaultLangChangeEvent>;\r\n\r\n  constructor(private translate: TranslateService, private _ref: ChangeDetectorRef) {\r\n  }\r\n\r\n  updateValue(key: string, interpolateParams?: Object, translations?: any): void {\r\n    let onTranslation = (res: string) => {\r\n      this.value = res !== undefined ? res : key;\r\n      this.lastKey = key;\r\n      this._ref.markForCheck();\r\n    };\r\n    if (translations) {\r\n      let res = this.translate.getParsedResult(translations, key, interpolateParams);\r\n      if (typeof res.subscribe === 'function') {\r\n        res.subscribe(onTranslation);\r\n      } else {\r\n        onTranslation(res);\r\n      }\r\n    }\r\n    this.translate.get(key, interpolateParams).subscribe(onTranslation);\r\n  }\r\n\r\n  transform(query: string, ...args: any[]): any {\r\n    if (!query || query.length === 0) {\r\n      return query;\r\n    }\r\n\r\n    // if we ask another time for the same key, return the last value\r\n    if (equals(query, this.lastKey) && equals(args, this.lastParams)) {\r\n      return this.value;\r\n    }\r\n\r\n    let interpolateParams: Object;\r\n    if (isDefined(args[0]) && args.length) {\r\n      if (typeof args[0] === 'string' && args[0].length) {\r\n        // we accept objects written in the template such as {n:1}, {'n':1}, {n:'v'}\r\n        // which is why we might need to change it to real JSON objects such as {\"n\":1} or {\"n\":\"v\"}\r\n        let validArgs: string = args[0]\r\n          .replace(/(\\')?([a-zA-Z0-9_]+)(\\')?(\\s)?:/g, '\"$2\":')\r\n          .replace(/:(\\s)?(\\')(.*?)(\\')/g, ':\"$3\"');\r\n        try {\r\n          interpolateParams = JSON.parse(validArgs);\r\n        } catch (e) {\r\n          throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${args[0]}`);\r\n        }\r\n      } else if (typeof args[0] === 'object' && !Array.isArray(args[0])) {\r\n        interpolateParams = args[0];\r\n      }\r\n    }\r\n\r\n    // store the query, in case it changes\r\n    this.lastKey = query;\r\n\r\n    // store the params, in case they change\r\n    this.lastParams = args;\r\n\r\n    // set the value\r\n    this.updateValue(query, interpolateParams);\r\n\r\n    // if there is a subscription to onLangChange, clean it\r\n    this._dispose();\r\n\r\n    // subscribe to onTranslationChange event, in case the translations change\r\n    if (!this.onTranslationChange) {\r\n      this.onTranslationChange = this.translate.onTranslationChange.subscribe((event: TranslationChangeEvent) => {\r\n        if (this.lastKey && event.lang === this.translate.currentLang) {\r\n          this.lastKey = null;\r\n          this.updateValue(query, interpolateParams, event.translations);\r\n        }\r\n      });\r\n    }\r\n\r\n    // subscribe to onLangChange event, in case the language changes\r\n    if (!this.onLangChange) {\r\n      this.onLangChange = this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n        if (this.lastKey) {\r\n          this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\r\n          this.updateValue(query, interpolateParams, event.translations);\r\n        }\r\n      });\r\n    }\r\n\r\n    // subscribe to onDefaultLangChange event, in case the default language changes\r\n    if (!this.onDefaultLangChange) {\r\n      this.onDefaultLangChange = this.translate.onDefaultLangChange.subscribe(() => {\r\n        if (this.lastKey) {\r\n          this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\r\n          this.updateValue(query, interpolateParams);\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.value;\r\n  }\r\n\r\n  /**\r\n   * Clean any existing subscription to change events\r\n   */\r\n  private _dispose(): void {\r\n    if (typeof this.onTranslationChange !== 'undefined') {\r\n      this.onTranslationChange.unsubscribe();\r\n      this.onTranslationChange = undefined;\r\n    }\r\n    if (typeof this.onLangChange !== 'undefined') {\r\n      this.onLangChange.unsubscribe();\r\n      this.onLangChange = undefined;\r\n    }\r\n    if (typeof this.onDefaultLangChange !== 'undefined') {\r\n      this.onDefaultLangChange.unsubscribe();\r\n      this.onDefaultLangChange = undefined;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._dispose();\r\n  }\r\n}\r\n","import {NgModule, ModuleWithProviders, Provider} from \"@angular/core\";\r\nimport {TranslateLoader, TranslateFakeLoader} from \"./lib/translate.loader\";\r\nimport {TranslateService} from \"./lib/translate.service\";\r\nimport {MissingTranslationHandler, FakeMissingTranslationHandler} from \"./lib/missing-translation-handler\";\r\nimport {TranslateParser, TranslateDefaultParser} from \"./lib/translate.parser\";\r\nimport {TranslateCompiler, TranslateFakeCompiler} from \"./lib/translate.compiler\";\r\nimport {TranslateDirective} from \"./lib/translate.directive\";\r\nimport {TranslatePipe} from \"./lib/translate.pipe\";\r\nimport {TranslateStore} from \"./lib/translate.store\";\r\nimport {USE_STORE} from \"./lib/translate.service\";\r\nimport {USE_DEFAULT_LANG} from \"./lib/translate.service\";\r\n\r\nexport * from \"./lib/translate.loader\";\r\nexport * from \"./lib/translate.service\";\r\nexport * from \"./lib/missing-translation-handler\";\r\nexport * from \"./lib/translate.parser\";\r\nexport * from \"./lib/translate.compiler\";\r\nexport * from \"./lib/translate.directive\";\r\nexport * from \"./lib/translate.pipe\";\r\nexport * from \"./lib/translate.store\";\r\n\r\nexport interface TranslateModuleConfig {\r\n  loader?: Provider;\r\n  compiler?: Provider;\r\n  parser?: Provider;\r\n  missingTranslationHandler?: Provider;\r\n  // isolate the service instance, only works for lazy loaded modules or components with the \"providers\" property\r\n  isolate?: boolean;\r\n  useDefaultLang?: boolean;\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TranslatePipe,\r\n    TranslateDirective\r\n  ],\r\n  exports: [\r\n    TranslatePipe,\r\n    TranslateDirective\r\n  ]\r\n})\r\nexport class TranslateModule {\r\n  /**\r\n   * Use this method in your root module to provide the TranslateService\r\n   */\r\n  static forRoot(config: TranslateModuleConfig = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: TranslateModule,\r\n      providers: [\r\n        config.loader || {provide: TranslateLoader, useClass: TranslateFakeLoader},\r\n        config.compiler || {provide: TranslateCompiler, useClass: TranslateFakeCompiler},\r\n        config.parser || {provide: TranslateParser, useClass: TranslateDefaultParser},\r\n        config.missingTranslationHandler || {provide: MissingTranslationHandler, useClass: FakeMissingTranslationHandler},\r\n        TranslateStore,\r\n        {provide: USE_STORE, useValue: config.isolate},\r\n        {provide: USE_DEFAULT_LANG, useValue: config.useDefaultLang},\r\n        TranslateService\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Use this method in your other (non root) modules to import the directive/pipe\r\n   */\r\n  static forChild(config: TranslateModuleConfig = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: TranslateModule,\r\n      providers: [\r\n        config.loader || {provide: TranslateLoader, useClass: TranslateFakeLoader},\r\n        config.compiler || {provide: TranslateCompiler, useClass: TranslateFakeCompiler},\r\n        config.parser || {provide: TranslateParser, useClass: TranslateDefaultParser},\r\n        config.missingTranslationHandler || {provide: MissingTranslationHandler, useClass: FakeMissingTranslationHandler},\r\n        {provide: USE_STORE, useValue: config.isolate},\r\n        {provide: USE_DEFAULT_LANG, useValue: config.useDefaultLang},\r\n        TranslateService\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":["tslib_1.__extends","of","Injectable","EventEmitter","InjectionToken","take","share","map","tslib_1.__values","merge","toArray","Observable","concat","switchMap","Inject","Directive","ElementRef","ChangeDetectorRef","Input","Pipe","NgModule"],"mappings":"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"}
