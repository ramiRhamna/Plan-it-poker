{"version":3,"file":"views.directive.d.ts","sources":["views.directive.d.ts"],"names":[],"mappingssourcesContent":["import { ViewContainerRef } from '@angular/core';\nimport { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';\n/**\n * `e-views` directive represent a view of the Angular Schedule.\n * It must be contained in a Schedule component(`ejs-schedule`).\n * ```html\n * <ejs-schedule>\n *   <e-views>\n *    <e-view option='day' dateFormat='dd MMM'></e-view>\n *    <e-view option='week'></e-view>\n *   </e-views>\n * </ejs-schedule>\n * ```\n */\nexport declare class ViewDirective extends ComplexBase<ViewDirective> {\n    private viewContainerRef;\n    directivePropList: any;\n    /**\n     * It is used to allow or disallow the virtual scrolling functionality on Agenda View. This is applicable only on Agenda view.\n     * @default false\n     */\n    allowVirtualScrolling: any;\n    /**\n     * By default, Schedule follows the date-format as per the default culture assigned to it. It is also possible to manually set\n     *  specific date format by using the `dateFormat` property. The format of the date range label in the header bar depends on\n     *  the `dateFormat` value or else based on the locale assigned to the Schedule.\n     *  It gets applied only to the view objects on which it is defined.\n     * @default null\n     */\n    dateFormat: any;\n    /**\n     * Specifies the starting week date at an initial rendering of month view. This property is only applicable for month view.\n     *  If this property value is not set, then the month view will be rendered from the first week of the month.\n     * {% codeBlock src='schedule/displayDate/index.md' %}{% endcodeBlock %}\n     * @default null\n     */\n    displayDate: any;\n    /**\n     * When the same view is customized with different intervals, this property allows the user to set different display name\n     *  for those views.\n     * @default null\n     */\n    displayName: any;\n    /**\n     * It is used to specify the end hour, at which the Schedule ends. It too accepts the time string in a short skeleton format.\n     * @default '24:00'\n     */\n    endHour: any;\n    /**\n     * This option allows the user to set the first day of a week on Schedule. It should be based on the locale set to it and each culture\n     *  defines its own first day of week values. If needed, the user can set it manually on his own by defining the value through\n     *  this property. It usually accepts the integer values, whereby 0 is always denoted as Sunday, 1 as Monday and so on.\n     * @default 0\n     */\n    firstDayOfWeek: any;\n    /**\n     * This property helps render the year view customized months.\n     * By default, it is set to `0`.\n     * @default 0\n     */\n    firstMonthOfYear: any;\n    /**\n     * Allows to set different resource grouping options on all available schedule view modes.\n     * @default { byDate: false, byGroupID: true, allowGroupEdit: false, resources:[]}\n     */\n    group: any;\n    /**\n     * Allows defining the collection of custom header rows to display the year, month, week, date and hour label as an individual row\n     *  on the timeline view of the scheduler.\n     * @default []\n     */\n    headerRows: any;\n    /**\n     * It accepts the number value denoting to include the number of days, weeks, workweeks or months on the defined view type.\n     * @default 1\n     */\n    interval: any;\n    /**\n     * To denote whether the view name given on the `option` is active or not.\n     * It acts similar to the `currentView` property and defines the active view of Schedule.\n     * @default false\n     */\n    isSelected: any;\n    /**\n     * This option allows the user to set the number of months count to be displayed on the Schedule.\n     * {% codeBlock src='schedule/monthsCount/index.md' %}{% endcodeBlock %}\n     * @default 12\n     * @asptype int\n     */\n    monthsCount: any;\n    /**\n     * This property customizes the number of weeks that are shown in month view. By default, it shows all weeks in the current month.\n     *  Use displayDate property to customize the starting week of month.\n     * {% codeBlock src='schedule/numberOfWeeks/index.md' %}{% endcodeBlock %}\n     * @default 0\n     * @asptype int\n     */\n    numberOfWeeks: any;\n    /**\n     * It accepts the schedule view name, based on which we can define with its related properties in a single object.\n     * The applicable view names are,\n     * * Day\n     * * Week\n     * * WorkWeek\n     * * Month\n     * * Year\n     * * Agenda\n     * * MonthAgenda\n     * * TimelineDay\n     * * TimelineWeek\n     * * TimelineWorkWeek\n     * * TimelineMonth\n     * * TimelineYear\n     * @default null\n     */\n    option: any;\n    /**\n     * It is used to specify the year view rendering orientation on the schedule.\n     * The applicable orientation values are,\n     * * Horizontal\n     * * Vertical\n     * @default 'Horizontal'\n     */\n    orientation: any;\n    /**\n     * When set to `true`, displays a quick popup with cell or event details on single clicking over the cells or on events.\n     *  By default, it is set to `true`. It gets applied only to the view objects on which it is defined.\n     * @default false\n     */\n    readonly: any;\n    /**\n     * When set to `true`, displays the week number of the current view date range.\n     * @default false\n     */\n    showWeekNumber: any;\n    /**\n     * When set to `false`, it hides the weekend days of a week from the Schedule.\n     * The days which are not defined in the working days collection are usually treated as weekend days.\n     * Note: By default, this option is not applicable on `Work Week` view.\n     * For example, if the working days are defined as [1, 2, 3, 4], then the remaining days of that week will be considered as the\n     *  weekend days and will be hidden on all the views.\n     * @default true\n     */\n    showWeekend: any;\n    /**\n     * It is used to specify the starting hour, from which the Schedule starts to display.\n     *  It accepts the time string in a short skeleton format and also, hides the time beyond the specified start time.\n     * @default '00:00'\n     */\n    startHour: any;\n    /**\n     * By default, Schedule follows the time-format as per the default culture assigned to it.\n     * It is also possible to manually set specific time format by using the `timeFormat` property.\n     * {% codeBlock src='schedule/timeFormat/index.md' %}{% endcodeBlock %}\n     * @default null\n     */\n    timeFormat: any;\n    /**\n     * Allows to set different timescale configuration on each applicable view modes such as day, week and work week.\n     * @default { enable: true, interval: 60, slotCount: 2, majorSlotTemplate: null, minorSlotTemplate: null }\n     */\n    timeScale: any;\n    /**\n     * It is used to set the working days on schedule. The only days that are defined in this collection will be rendered on the\n     *  `workWeek` view whereas on other views, it will display all the usual days and simply highlights the working days with different\n     *  shade.\n     * @default '[1, 2, 3, 4, 5]'\n     * @asptype int[]\n     */\n    workDays: any;\n    /**\n     * It accepts either the string or HTMLElement as template design content and parse it appropriately before displaying it onto the\n     *  date header cells. The field that can be accessed via this template is `date`.\n     *  It gets applied only to the view objects on which it is defined.\n     * @default null\n     */\n    dateHeaderTemplate: any;\n    /**\n     * It accepts either the string or HTMLElement as template design content and parse it appropriately before displaying it onto the\n     *  Year view day cell header.\n     *  This template is only applicable for year view header cells.\n     * @default null\n     */\n    dayHeaderTemplate: any;\n    /**\n     * It accepts either the string or HTMLElement as template design content and parse it appropriately before displaying it onto the\n     *  month date cells.\n     *  This template is only applicable for month view day cells.\n     * @default null\n     */\n    cellHeaderTemplate: any;\n    /**\n     * The template option which is used to render the customized work cells on the Schedule. Here, the\n     *  template accepts either the string or HTMLElement as template design and then the parsed design is displayed onto the work cells.\n     *  The field accessible via template is `date`. It gets applied only to the view objects on which it is defined.\n     * @default null\n     */\n    cellTemplate: any;\n    /**\n     * It accepts either the string or HTMLElement as template design content and parse it appropriately before displaying it onto\n     *  the event background. All the event fields mapped to Schedule from dataSource can be accessed within this template code.\n     *  It is similar to that of the `template` option available within the `eventSettings` property,\n     *  whereas it will get applied only on the events of the view to which it is currently being defined.\n     * @default null\n     */\n    eventTemplate: any;\n    /**\n     * It accepts either the string or HTMLElement as template design content and parse it appropriately before displaying it onto the\n     *  Year view day cell header.\n     *  This template is only applicable for year view header cells.\n     * @default null\n     */\n    monthHeaderTemplate: any;\n    /**\n     * The template option which is used to render the customized header cells on the schedule. Here, the\n     *  template accepts either the string or HTMLElement as template design and then the parsed design is displayed onto the header cells.\n     *  All the resource fields mapped within resources can be accessed within this template code.\n     *  It gets applied only to the view objects on which it is defined.\n     * @default null\n     */\n    resourceHeaderTemplate: any;\n    /**\n     * The template option which is used to render the customized header indent cell on the schedule. Here, the\n     *  template accepts either the string or HTMLElement as template design and then the parsed design is displayed onto the header indent cell.\n     *  It gets applied only to the view objects on which it is defined.\n     * @default null\n     */\n    headerIndentTemplate: any;\n    timeScale_minorSlotTemplate: any;\n    timeScale_majorSlotTemplate: any;\n    group_headerTooltipTemplate: any;\n    constructor(viewContainerRef: ViewContainerRef);\n}\n/**\n * View Array Directive\n * @private\n */\nexport declare class ViewsDirective extends ArrayBase<ViewsDirective> {\n    constructor();\n}\n"]}