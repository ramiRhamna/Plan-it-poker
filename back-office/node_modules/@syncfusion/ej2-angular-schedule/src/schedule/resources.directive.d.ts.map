{"version":3,"file":"resources.directive.d.ts","sources":["resources.directive.d.ts"],"names":[],"mappingssourcesContent":["import { ViewContainerRef } from '@angular/core';\nimport { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';\n/**\n * `e-resources` directive represent a resources of the Angular Schedule.\n * It must be contained in a Schedule component(`ejs-schedule`).\n * ```html\n * <ejs-schedule>\n *   <e-resources>\n *    <e-resource field='RoomId' name='Rooms'></e-resource>\n *    <e-resource field='OwnerId' name='Owners'></e-resource>\n *   </e-resources>\n * </ejs-schedule>\n * ```\n */\nexport declare class ResourceDirective extends ComplexBase<ResourceDirective> {\n    private viewContainerRef;\n    directivePropList: any;\n    /**\n     * When set to true, allows multiple selection of resource names, thus creating multiple instances of same appointment for the\n     *  selected resources.\n     * @default false\n     */\n    allowMultiple: any;\n    /**\n     * It maps the `color` field from the dataSource, which is used to specify colors for the resources.\n     * @default 'Color'\n     */\n    colorField: any;\n    /**\n     * It maps the `cssClass` field from the dataSource, which is used to specify different styles to each resource appointments.\n     * @default 'CssClass'\n     */\n    cssClassField: any;\n    /**\n     * Assigns the resource dataSource\n     * The data can be passed either as an array of JavaScript objects,\n     * or else can create an instance of [`DataManager`](http://ej2.syncfusion.com/documentation/data/api-dataManager.html)\n     * in case of processing remote data and can be assigned to the `dataSource` property.\n     * With the remote data assigned to dataSource, check the available\n     *  [adaptors](http://ej2.syncfusion.com/documentation/data/adaptors.html) to customize the data processing.\n     * @default []\n     */\n    dataSource: any;\n    /**\n     * It maps the `endHour` field from the dataSource, which is used to specify different work end hour for each resources.\n     * @default 'EndHour'\n     */\n    endHourField: any;\n    /**\n     * It maps the `expanded` field from the dataSource, which is used to specify whether each resource levels\n     * in timeline view needs to be maintained in an expanded or collapsed state by default.\n     * @default 'Expanded'\n     */\n    expandedField: any;\n    /**\n     * A value that binds to the resource field of event object.\n     * @default null\n     */\n    field: any;\n    /**\n     * It maps the `groupID` field from the dataSource, which is used to specify under which parent resource,\n     *  the child should be grouped.\n     * @default 'GroupID'\n     */\n    groupIDField: any;\n    /**\n     * It maps the `id` field from the dataSource and is used to uniquely identify the resources.\n     * @default 'Id'\n     */\n    idField: any;\n    /**\n     * It represents a unique resource name for differentiating various resource objects while grouping.\n     * @default null\n     */\n    name: any;\n    /**\n     * Defines the external [`query`](http://ej2.syncfusion.com/documentation/data/api-query.html)\n     * that will be executed along with the data processing.\n     * @default null\n     */\n    query: any;\n    /**\n     * It maps the `startHour` field from the dataSource, which is used to specify different work start hour for each resources.\n     * @default 'StartHour'\n     */\n    startHourField: any;\n    /**\n     * It maps the `text` field from the dataSource, which is used to specify the resource names.\n     * @default 'Text'\n     */\n    textField: any;\n    /**\n     * It holds the title of the resource field to be displayed on the schedule event editor window.\n     * @default null\n     */\n    title: any;\n    /**\n     * It maps the working days field from the dataSource, which is used to specify different working days for each resources.\n     * @default 'WorkDays'\n     */\n    workDaysField: any;\n    constructor(viewContainerRef: ViewContainerRef);\n}\n/**\n * Resource Array Directive\n * @private\n */\nexport declare class ResourcesDirective extends ArrayBase<ResourcesDirective> {\n    constructor();\n}\n"]}