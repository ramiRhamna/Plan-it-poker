{"version":3,"file":"chips.directive.d.ts","sources":["chips.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ViewContainerRef } from '@angular/core';\nimport { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';\n/**\n * `e-chip` directive represent a chip of the Angular ChipList.\n * ```html\n * <ejs-chiplist >\n *   <e-chips>\n *    <e-chip text='chip1'></e-chip>\n *    <e-chip text='chip2'></e-chip>\n *   </e-chips>\n * </ejs-chiplist>\n * ```\n */\nexport declare class ChipDirective extends ComplexBase<ChipDirective> {\n    private viewContainerRef;\n    directivePropList: any;\n    /**\n     * Specifies the icon CSS class for the avatar in the chip.\n     * @default ''\n     */\n    avatarIconCss: any;\n    /**\n     * Specifies the customized text value for the avatar in the chip.\n     * @default ''\n     */\n    avatarText: any;\n    /**\n     * Specifies the custom classes to be added to the chip element used to customize the ChipList component.\n     * @default ''\n     */\n    cssClass: any;\n    /**\n     * Specifies a value that indicates whether the chip component is enabled or not.\n     * @default true\n     */\n    enabled: any;\n    /**\n     * Specifies the leading icon CSS class for the chip.\n     * @default ''\n     */\n    leadingIconCss: any;\n    /**\n     * Specifies the leading icon url for the chip.\n     * @default ''\n     */\n    leadingIconUrl: any;\n    /**\n     * Specifies the text content for the chip.\n     * @default ''\n     */\n    text: any;\n    /**\n     * Specifies the trailing icon CSS class for the chip.\n     * @default ''\n     */\n    trailingIconCss: any;\n    /**\n     * Specifies the trailing icon url for the chip.\n     * @default ''\n     */\n    trailingIconUrl: any;\n    /**\n     * Defines the value of the chip.\n     * @default ''\n     */\n    value: any;\n    constructor(viewContainerRef: ViewContainerRef);\n}\n/**\n * Chip Array Directive\n * @private\n */\nexport declare class ChipsDirective extends ArrayBase<ChipsDirective> {\n    constructor();\n}\n"]}